[{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://smarenkov.blog.github.io/blog/p/hello-world/cover_hu6307248181568134095.jpg","permalink":"https://smarenkov.blog.github.io/blog/p/hello-world/","title":"Hello World"},{"content":"Setting Up Database Module To begin, create a new module in your project for managing database connections and migrations:\n1 2 3 4 5 6 ├─ src/ │ └─ database/ │ ├─ migrations/ │ ├─ database.config.ts │ └─ database.module.ts └─ .env database.config.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 // Load .env file from project root directory dotenv.config({ path: \u0026#39;.env\u0026#39; }); // ,env file from root // Logging env variables to ensure proper loading of .env file console.log(\u0026#34;Environment Variables:\u0026#34;); console.log(\u0026#34;POSTGRES_USER:\u0026#34;, env.POSTGRES_USER); console.log(\u0026#34;POSTGRES_DB:\u0026#34;, env.POSTGRES_DB); const baseConfig = { type: \u0026#34;postgres\u0026#34; as const, entitySkipConstructor: true, host: env.POSTGRES_HOST, port: parseInt(env.POSTGRES_PORT), username: env.POSTGRES_USER, password: env.POSTGRES_PASSWORD, database: env.POSTGRES_DB, entities: [cwd() + \u0026#34;/dist/core/**/*.entity.js\u0026#34;], migrations: [cwd() + \u0026#34;/dist/database/migrations/*.js\u0026#34;], synchronize: false, dropSchema: false, migrationsRun: true, logging: false, maxQueryExecutionTime: 30000, poolSize: 5, }; export const databaseConfig: DataSourceOptions = { ...baseConfig, }; export const dataSource = new DataSource({ ...baseConfig, host: \u0026#34;localhost\u0026#34; // \u0026#34;localhost\u0026#34; for use outside Docker }); database.module.ts 1 2 3 4 5 6 @Module({ imports: [ TypeOrmModule.forRoot(databaseConfig), ], }) export class DatabaseModule { } .env 1 2 3 4 5 POSTGRES_HOST= POSTGRES_PORT= POSTGRES_USER= POSTGRES_DB= POSTGRES_PASSWORD= application’s main module 1 2 3 4 5 6 7 8 9 10 @Module({ imports: [ ConfigModule.forRoot({ envFilePath: `.env`, isGlobal: true, }), DatabaseModule, ], }) export class AppModule { } Setting Up Migration Commands Add these scripts to your package.json:\n1 2 3 4 5 6 7 8 { \u0026#34;scripts\u0026#34;: { \u0026#34;migration:create\u0026#34;: \u0026#34;npx typeorm migration:create src/database/migrations/$npm_config_name\u0026#34;, \u0026#34;migration:generate\u0026#34;: \u0026#34;npm run build \u0026amp;\u0026amp; npx typeorm migration:generate -d dist/database/database.config.js src/database/migrations/$npm_config_name\u0026#34;, \u0026#34;migration:run\u0026#34;: \u0026#34;npx typeorm migration:run -d dist/database/database.config.js\u0026#34;, \u0026#34;migration:revert\u0026#34;: \u0026#34;npm run build \u0026amp;\u0026amp; npx typeorm migration:revert -d dist/database/database.config.js\u0026#34; } } Now you can use these commands to manage your migrations:\n1 2 3 4 5 6 7 8 9 10 11 # Create a new empty migration npm run migration:create --name=your-migration-name # Generate a migration based on entity changes npm run migration:generate --name=your-migration-name # Run pending migrations npm run migration:run # Revert the last migration npm run migration:revert ","date":"2025-01-02T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/nestjs-and-typeorm-database-migrations/","title":"NestJS and TypeORM Database Migrations"},{"content":"Redis offers commands for managing keys, such as flushall to clear all keys. In this post, however, we’ll focus on how to flush specific keys.\nStep 1: Identify Keys Use redis-cli --scan --pattern to find keys matching a specific pattern:\n1 redis-cli --scan --pattern \u0026#34;session:auth:token:*\u0026#34; This command will return all keys that start with session:auth:token:.\nStep 2: Delete the Keys Once you have the list of keys, use the DEL command to delete them. To automate this, use the following one-liner:\n1 redis-cli --scan --pattern \u0026#34;session:auth:token:*\u0026#34; | xargs redis-cli DEL Explanation:\nredis-cli \u0026ndash;scan \u0026ndash;pattern \u0026ldquo;pattern\u0026rdquo; fetches the matching keys. xargs redis-cli DEL passes the fetched keys to the DEL command for deletion. ","date":"2024-12-28T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/how-to-flush-specific-keys-in-redis/","title":"How to Flush Specific Keys in Redis"},{"content":"Hostnames on the Same Tunnel Step 1: Login to Cloudflare 1 cloudflared login Step 2: Create a New Tunnel Replace tunnel_name with your desired tunnel name.\n1 cloudflared tunnel create tunnel_name Verify the created tunnel by listing all existing tunnels:\n1 cloudflared tunnel list Example Output:\n1 2 ID NAME CREATED CONNECTIONS tunnel_uuid tunnel_name created_at In your .cloudflared directory, the tunnel_uuid.json file should automatically be created.\nStep 3: Configure the Tunnel Edit or create if not exist a .config.yaml file in your .cloudflared directory\n1 2 3 4 5 6 7 8 9 tunnel: tunnel_uuid credentials-file: ./tunnel_uuid.json ingress: - hostname: api.your_domain service: http://localhost:3000 - hostname: web.your_domain service: http://localhost:5173 - service: http_status:404 Step 4: Verify Folder Structure Your .cloudflared directory should look like this:\n1 2 3 tunnel_uuid.json -- created after \u0026#39;cloudflared tunnel create\u0026#39; cert.pem -- created after \u0026#39;cloudflared login\u0026#39; config.yml -- your custom configuration file Step 5: Add DNS Records Map your domain to the tunnel by adding DNS records:\n1 2 cloudflared tunnel route dns tunnel_uuid api.your_domain cloudflared tunnel route dns tunnel_uuid web.your_domain Step 6: Start the Tunnel Run the tunnel:\n1 cloudflared tunnel run tunnel_name Ensure your local services are running on the specified ports.\nHostnames on Different Tunnels Step 1: Login to Cloudflare 1 cloudflared login Step 2: Create a New Tunnels Replace tunnel_name_api and tunnel_name_web with your desired tunnel names.\n1 2 cloudflared tunnel create tunnel_name_api cloudflared tunnel create tunnel_name_web Verify the created tunnels by listing all existing tunnels:\n1 cloudflared tunnel list Example Output:\n1 2 3 ID NAME CREATED CONNECTIONS tunnel_uuid_api tunnel_name_api created_at tunnel_uuid_web tunnel_name_web created_at In your .cloudflared directory, the tunnel_uuid_api.json and tunnel_uuid_web.json files should automatically be created.\nStep 3: Configure the Tunnels Create a .config_api.yaml and .config_web.yaml files in your .cloudflared directory\n1 2 3 4 5 6 7 tunnel: tunnel_uuid_api credentials-file: ./tunnel_uuid_api.json ingress: - hostname: api.your_domain service: http://localhost:3000 - service: http_status:404 1 2 3 4 5 6 7 tunnel: tunnel_uuid_web credentials-file: ./tunnel_uuid_web.json ingress: - hostname: web.your_domain service: http://localhost:5173 - service: http_status:404 Step 4: Verify Folder Structure Your .cloudflared directory should look like this:\n1 2 3 4 5 tunnel_uuid_api.json -- created after \u0026#39;cloudflared tunnel create\u0026#39; tunnel_uuid_web.json -- created after \u0026#39;cloudflared tunnel create\u0026#39; cert.pem -- created after \u0026#39;cloudflared login\u0026#39; config_api.yml -- your custom configuration file config_web.yml -- your custom configuration file Step 5: Add DNS Records Map your domain to the tunnel by adding DNS records:\n1 2 cloudflared tunnel route dns tunnel_uuid_api api.your_domain cloudflared tunnel route dns tunnel_uuid_web web.your_domain If these subdomains are already assigned to different tunnels, navigate to the Cloudflare dashboard and remove the associated DNS records.\nStep 6: Start the Tunnels Run the tunnel:\n1 2 cloudflared tunnel --config ~/.cloudflared/config-api.yml run cloudflared tunnel --config ~/.cloudflared/config-web.yml run Ensure your local services are running on the specified ports.\n","date":"2024-10-19T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/cloudflared-tunnel/","title":"Cloudflared Tunnel"},{"content":"If you want to run Docker Compose and use your local MongoDB, you\u0026rsquo;ll need to modify the MongoDB configuration to allow external connections.\nOpen the MongoDB configuration file mongod.conf.\nEdit the following line to enable connections from any IP address:\n1 2 3 4 5 net: # Other configurations... # Enable connection from any IP address bindIp: 0.0.0.0 Restart MongoDB ","date":"2024-10-19T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/running-docker-compose-with-local-mongodb/","title":"Running Docker Compose with Local MongoDB"},{"content":"If you want to run Docker Compose and use your local RabbitMQ instance, you\u0026rsquo;ll need to modify the RabbitMQ configuration to specify the IP address.\nOpen the RabbitMQ configuration file rabbitmq.conf. If it doesn\u0026rsquo;t exist, create it in the RabbitMQ directory /etc/rabbitmq/.\nAdd the following line to specify the IP address:\n1 listeners.tcp.default = [your ip address]:5672 Restart RabbitMQ ","date":"2024-10-19T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/running-docker-compose-with-local-rabbitmq/","title":"Running Docker Compose with Local RabbitMQ"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"https://smarenkov.blog.github.io/blog/p/image-gallery/2_hu15576070775610481867.jpg","permalink":"https://smarenkov.blog.github.io/blog/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"https://smarenkov.blog.github.io/blog/p/shortcodes/cover_hu17063188895770243625.jpg","permalink":"https://smarenkov.blog.github.io/blog/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"https://smarenkov.blog.github.io/blog/p/math-typesetting/","title":"Math Typesetting"}]